package no.ntnu.webappgroup03.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

import java.util.HashSet;
import java.util.Set;


/**
 * Represents a user.
 */
@Entity
public class User {
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private int id;
  private String firstName;
  private String lastName;
  private String email;
  private int phoneNumber;
  private String password;
  private boolean isAdmin;

  //TODO autogenerated id?
  @JsonIgnore
  private Set<Hotel> hotels = new HashSet<>();

  public User() {
    // Intentionally left blank
  }

  //TODO i girtz sitt ekempel er id auto generert og ikkje i konstrukt√∏ren
  /**
   *
   * @param id
   * @param firstName   The firstName of the user
   * @param lastName    The lastName of the user
   * @param email       The email of the user
   * @param phoneNumber The phoneNumber of the user
   * @param password    The password of the user
   * @param isAdmin     A boolean value indicationg whether the user is an admin.
   *                    If true, the user is an admin; otherwise the user is not admin.
   */
  public User(int id, String firstName, String lastName, String email, int phoneNumber, String password, boolean isAdmin) {
    this.id = id;
    this.firstName = firstName;
    this.lastName = lastName;
    this.email = email;
    this.phoneNumber = phoneNumber;
    this.password = password;
    this.isAdmin = isAdmin;
  }

  public int getId() {
    return id;
  }

  public void setId(int id) {
    this.id = id;
  }

  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public int getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(int phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public boolean isAdmin() {
    return isAdmin;
  }

  public void setAdmin(boolean admin) {
    isAdmin = admin;
  }

  //TODO proper JSONIGNORE handling
  /**
   *
   * @return
   */
  //The JsonIgnore annotation make sure we don't include the "valid" field when generating JSON
//  @JsonIgnore
//  public boolean isValid() {
 //   return (id == null || id < 0) && !"".equals(lastName) && yearIssued > 0 && numberOfPages > 0;
 // }

  @Override
  public String toString() {
    return "User{" +
        "id=" + id +
        ", firstName='" + firstName + '\'' +
        ", lastName='" + lastName + '\'' +
        ", email='" + email + '\'' +
        ", phoneNumber=" + phoneNumber +
        ", password='" + password + '\'' +
        ", isAdmin=" + isAdmin +
        '}';
  }

  public boolean isValid() {
    return email != null && !email.equals("");
  }

  /**
   * Add a hotel to the hotel list of the user
   *
   * @param hotel The hotel to add
   */
  public void AddHotel(Hotel hotel) {
    hotels.add(hotel);
  }
}
